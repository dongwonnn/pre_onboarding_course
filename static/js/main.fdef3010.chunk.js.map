{"version":3,"sources":["reducers/navigation.ts","reducers/field.ts","App.tsx","lib/api/client.ts","lib/api/data.ts","sagas/navigation.ts","sagas/field.ts","sagas/index.ts","reducers/index.ts","store/index.ts","lib/styles/GlobalStyles.tsx","index.tsx"],"names":["LOAD_NAVIGATION_REQUEST","LOAD_NAVIGATION_SUCCESS","LOAD_NAVIGATION_FAILURE","loadNavigationSuccess","payload","type","initialStete","navData","navLoading","navError","navigation","state","action","LOAD_FIELD_REQUEST","LOAD_FIELD_SUCCESS","LOAD_FIELD_FAILURE","loadFieldSuccess","fieldData","fieldLoading","fieldError","field","HomePage","loadable","App","path","component","client","axios","create","defaults","baseURL","getNavData","get","getFieldData","loadNavigationSaga","navigationSaga","call","authApi","response","put","data","takeLatest","loadFieldSaga","fieldSaga","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","GlobalStyles","createGlobalStyle","reset","rootElement","document","getElementById","hasChildNodes","hydrate","basename","render"],"mappings":"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","file":"static/js/main.fdef3010.chunk.js","sourcesContent":["import { INavData } from \"../lib/types/INavData\";\r\n\r\nexport const LOAD_NAVIGATION_REQUEST = \"LOAD_NAVIGATION_REQUEST\" as const;\r\nexport const LOAD_NAVIGATION_SUCCESS = \"LOAD_NAVIGATION_SUCCESS\" as const;\r\nexport const LOAD_NAVIGATION_FAILURE = \"LOAD_NAVIGATION_FAILURE\" as const;\r\n\r\nexport const loadNavigationRequest = () => ({\r\n  type: LOAD_NAVIGATION_REQUEST,\r\n});\r\n\r\nexport const loadNavigationSuccess = (payload: INavData[]) => ({\r\n  type: LOAD_NAVIGATION_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const loadNavigationFailure = (payload: string) => ({\r\n  type: LOAD_NAVIGATION_FAILURE,\r\n  payload,\r\n});\r\n\r\n// 액션 타입\r\ntype NavigationAction =\r\n  | ReturnType<typeof loadNavigationRequest>\r\n  | ReturnType<typeof loadNavigationSuccess>\r\n  | ReturnType<typeof loadNavigationFailure>;\r\n\r\nexport const initialStete = {\r\n  navData: null,\r\n  navLoading: false,\r\n  navError: null,\r\n};\r\n\r\n// 초기값 타입\r\ntype NavigationState = {\r\n  navData: INavData[] | null;\r\n  navLoading: boolean;\r\n  navError: string | null;\r\n};\r\n\r\nconst navigation = (\r\n  state: NavigationState = initialStete,\r\n  action: NavigationAction\r\n): NavigationState => {\r\n  switch (action.type) {\r\n    case LOAD_NAVIGATION_REQUEST:\r\n      return {\r\n        ...state,\r\n        navLoading: true,\r\n        navError: null,\r\n      };\r\n    case LOAD_NAVIGATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        navData: action.payload,\r\n        navLoading: false,\r\n        navError: null,\r\n      };\r\n    case LOAD_NAVIGATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        navData: [],\r\n        navLoading: false,\r\n        navError: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default navigation;\r\n","import { IFieldData } from \"../lib/types/IFieldData\";\r\n\r\nexport const LOAD_FIELD_REQUEST = \"LOAD_FIELD_REQUEST\" as const;\r\nexport const LOAD_FIELD_SUCCESS = \"LOAD_FIELD_SUCCESS\" as const;\r\nexport const LOAD_FIELD_FAILURE = \"LOAD_FIELD_FAILURE\" as const;\r\n\r\nexport const loadFieldRequest = () => ({\r\n  type: LOAD_FIELD_REQUEST,\r\n});\r\n\r\nexport const loadFieldSuccess = (payload: IFieldData[]) => ({\r\n  type: LOAD_FIELD_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const loadFieldFailure = (payload: string) => ({\r\n  type: LOAD_FIELD_FAILURE,\r\n  payload,\r\n});\r\n\r\n// 액션 타입\r\ntype FieldAction =\r\n  | ReturnType<typeof loadFieldRequest>\r\n  | ReturnType<typeof loadFieldSuccess>\r\n  | ReturnType<typeof loadFieldFailure>;\r\n\r\nexport const initialStete = {\r\n  fieldData: [],\r\n  fieldLoading: false,\r\n  fieldError: null,\r\n};\r\n\r\n// 초기값 타입\r\ntype FieldState = {\r\n  fieldData: IFieldData[] | null;\r\n  fieldLoading: boolean;\r\n  fieldError: string | null;\r\n};\r\n\r\nconst field = (\r\n  state: FieldState = initialStete,\r\n  action: FieldAction\r\n): FieldState => {\r\n  switch (action.type) {\r\n    case LOAD_FIELD_REQUEST:\r\n      return {\r\n        ...state,\r\n        fieldLoading: true,\r\n        fieldError: null,\r\n      };\r\n    case LOAD_FIELD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fieldData: action.payload,\r\n        fieldLoading: false,\r\n        fieldError: null,\r\n      };\r\n    case LOAD_FIELD_FAILURE:\r\n      return {\r\n        ...state,\r\n        fieldData: [],\r\n        fieldLoading: false,\r\n        fieldError: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default field;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\n\nconst HomePage = loadable(() => import(\"./pages/HomePage\"));\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={HomePage} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nconst client = axios.create();\r\n\r\n// client.defaults.baseURL = process.env.BASE_URL;\r\nclient.defaults.baseURL = \"http://localhost:3001/\";\r\n\r\nexport default client;\r\n","import client from \"./client\";\r\n\r\nexport const getNavData = () => client.get(\"/nav\");\r\nexport const getFieldData = () => client.get(\"/field\");\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  loadNavigationRequest,\r\n  LOAD_NAVIGATION_FAILURE,\r\n  LOAD_NAVIGATION_REQUEST,\r\n  LOAD_NAVIGATION_SUCCESS,\r\n} from \"../reducers/navigation\";\r\nimport * as authApi from \"../lib/api/data\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\n// saga\r\nfunction* loadNavigationSaga(action: ReturnType<typeof loadNavigationRequest>) {\r\n  try {\r\n    const response: AxiosResponse = yield call(authApi.getNavData);\r\n\r\n    yield put({\r\n      type: LOAD_NAVIGATION_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_NAVIGATION_FAILURE,\r\n      payload: e,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* navigationSaga() {\r\n  yield takeLatest(LOAD_NAVIGATION_REQUEST, loadNavigationSaga);\r\n}\r\n","import { AxiosResponse } from \"axios\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport * as authApi from \"../lib/api/data\";\r\nimport {\r\n  loadFieldRequest,\r\n  LOAD_FIELD_FAILURE,\r\n  LOAD_FIELD_REQUEST,\r\n  LOAD_FIELD_SUCCESS,\r\n} from \"../reducers/field\";\r\n\r\n// saga 생성\r\nfunction* loadFieldSaga(action: ReturnType<typeof loadFieldRequest>) {\r\n  try {\r\n    const response: AxiosResponse = yield call(authApi.getFieldData);\r\n\r\n    yield put({\r\n      type: LOAD_FIELD_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_FIELD_FAILURE,\r\n      payload: e,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* fieldSaga() {\r\n  yield takeLatest(LOAD_FIELD_REQUEST, loadFieldSaga);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\n\r\nimport { navigationSaga } from \"./navigation\";\r\nimport { fieldSaga } from \"./field\";\r\n\r\nexport function* rootSaga() {\r\n  yield all([navigationSaga(), fieldSaga()]);\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport navigation from \"./navigation\";\r\nimport field from \"./field\";\r\n\r\nconst rootReducer = combineReducers({\r\n  navigation,\r\n  field,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootSaga } from \"../sagas\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n\r\n        &::-webkit-scrollbar {\r\n            display: none; /* Chrome, Safari, Opera*/\r\n        }\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\nimport { render, hydrate } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport GlobalStyles from \"./lib/styles/GlobalStyles\";\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement !== null && rootElement.hasChildNodes()) {\n  hydrate(\n    <BrowserRouter basename=\"pre_onboarding_course\">\n      <Provider store={store}>\n        <App />\n        <GlobalStyles />\n      </Provider>\n    </BrowserRouter>,\n    rootElement\n  );\n} else {\n  render(\n    <BrowserRouter basename=\"pre_onboarding_course\">\n      <Provider store={store}>\n        <App />\n        <GlobalStyles />\n      </Provider>\n    </BrowserRouter>,\n    rootElement\n  );\n}\n"],"sourceRoot":""}